import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.library'

//apply plugin: 'com.github.dcendents.android-maven'
//新添加
//apply plugin: 'com.novoda.bintray-release'

// 指定group，com.github.<用户名>，这里我默认填写的是我的github账号，请换成你自己的。
//group='com.github.cyihui'
//apply from: '/Users/chenyihui/AsProjects/SAOP-master/jitpackupload.gradle'
android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 4
        versionName "1.0.3"


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.aspectj:aspectjrt:1.8.9'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    //磁盘缓存的依赖包
    implementation 'com.jakewharton:disklrucache:2.0.2'
    api project(':saop_annotation')
}


android.libraryVariants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = [
                "-showWeaveInfo",
                "-1.5",
                "-inpath", javaCompile.destinationDir.toString(),
                "-aspectpath", javaCompile.classpath.asPath,
                "-d", javaCompile.destinationDir.toString(),
                "-classpath", javaCompile.classpath.asPath,
                "-bootclasspath", android.bootClasspath.join(File.pathSeparator)
        ]

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)

        def log = project.logger
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}
// 指定编码
//tasks.withType(JavaCompile) {
//    options.encoding = "UTF-8"
//}
//
//tasks.withType(Javadoc) {
//    options.encoding = 'UTF-8'
//}
//
//if (project.hasProperty("android")) { // Android libraries
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.srcDirs
//    }
//
//    task javadoc(type: Javadoc) {
//        failOnError  false
//        source = android.sourceSets.main.java.srcDirs
//        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    }
//} else { // Java libraries
//    task sourcesJar(type: Jar, dependsOn: classes) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }
//}
//
//javadoc {
//    options {
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version true
//        links "http://docs.oracle.com/javase/7/docs/api"
//    }
//}
//
//// 制作文档(Javadoc)
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}

//apply from: '../bintray.gradle'